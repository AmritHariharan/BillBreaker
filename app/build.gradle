apply plugin: 'com.android.application'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.1"
    defaultConfig {
        applicationId "com.billbreaker"
        minSdkVersion 23
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField "String", "AZURE_COGNITION_KEY", "\"" + getAzureCognitionKey() + "\""
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.0.0-rc01'
    implementation 'androidx.recyclerview:recyclerview:1.1.0-beta01'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'com.android.support:design:29.0.0'
    implementation 'cz.msebera.android:httpclient:4.5.8'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.9.1'
    api 'com.theartofdev.edmodo:android-image-cropper:2.8.+'
}

def getAzureCognitionKey() {
    Properties properties = new Properties()
    String azureCognitionKey = null
    if (project.rootProject.file('local.properties').exists()) {
        properties.load(project.rootProject.file('local.properties').newDataInputStream())
        azureCognitionKey = properties.getProperty("azureCognitionKey")
    }
    if (!azureCognitionKey) {
        throw new Exception('azureCognitionKey not found in local.properties file.')
    }
    return azureCognitionKey
}
